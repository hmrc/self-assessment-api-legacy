#%RAML 1.0
---

title: Self Assessment
version: 1.0
protocols: [ HTTPS ]
baseUri: https://api.service.hmrc.gov.uk/
mediaType: application/json

uses:
  sec: http://api-documentation-raml-frontend.service/api-documentation/assets/common/modules/securitySchemes.raml
  headers: http://api-documentation-raml-frontend.service/api-documentation/assets/common/modules/headers.raml
  annotations: http://api-documentation-raml-frontend.service/api-documentation/assets/common/modules/annotations.raml

documentation:
  - title: Overview
    content: !include docs/overview.md
  - title: Versioning
    content: !include http://api-documentation-raml-frontend.service/api-documentation/assets/common/docs/versioning.md
  - title: Errors
    content: !include http://api-documentation-raml-frontend.service/api-documentation/assets/common/docs/errors.md

/self-assessment:
  /ni/{nino}:
    uriParameters:
      nino:
        description: National Insurance Number
        type: string
    /self-employments:
      (annotations.group):
          name: Self Employment Businesses
          description: !include docs/self-employment.md
      post:
        displayName: Register a self-employment business
        description: Register a self-employment business
        is: [headers.acceptHeader]
        (annotations.scope): "write:self-assessment"
        securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
        body:
          application/json:
            type: !include schemas/SelfEmployment.json
            example: !include examples/self-employment/SelfEmployment.json
        responses:
          201:
            headers:
              Location:
                example: /self-assessment/ni/{nino}/self-employments/{selfEmploymentId}
                description: Location of the resource created
          400:
            body:
              application/json:
                type: !include schemas/Error.json
                example: !include examples/errors/TOO_MANY_SOURCES.json
      get:
        displayName: List self-employment businesses
        description: List self-employment businesses
        is: [headers.acceptHeader]
        (annotations.scope): "read:self-assessment"
        securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
        responses:
          200:
            body:
              application/json:
                type: !include schemas/SelfEmployments.json
                example: !include examples/self-employment/SelfEmployments.json
      /{selfEmploymentId}:
        description: Self Employment Business
        uriParameters:
          selfEmploymentId:
            displayName: Self-employment ID
            description: An identifier for the self-employmment business, unique to the customer
            type: string
        get:
          displayName: Get self-employment business
          description: Get a self-employment business
          is: [headers.acceptHeader]
          (annotations.scope): "read:self-assessment"
          securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
          responses:
            200:
              body:
                application/json:
                  type: !include schemas/SelfEmployment.json
                  example: !include examples/self-employment/SelfEmployment.json
            404:
              body:
                application/json:
                  type: !include schemas/Error.json
                  example: !include examples/errors/NOT_FOUND.json
        put:
          displayName: Update self-employment business
          description: Update a self-employment business, e.g. to change accounting period
          is: [headers.acceptHeader]
          (annotations.scope): "write:self-assessment"
          securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
          body:
            application/json:
              type: !include schemas/SelfEmployment.json
              example: !include examples/self-employment/SelfEmployment.json
          responses:
            204:
            400:
              body:
                application/json:
                  type: !include schemas/Error.json
                  example: !include examples/errors/INVALID_ACCOUNTING_PERIOD.json
        /periods:
          post:
            displayName: Create a self-employment period
            description: Create a self-employment period for submission of periodic data i.e incomes and expenses
            is: [headers.acceptHeader]
            (annotations.scope): "write:self-assessment"
            securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
            body:
              application/json:
                type: !include schemas/SE_Period.json
                example: !include examples/self-employment/Period.json
            responses:
              201:
                headers:
                  Location:
                    example: /self-assessment/ni/{nino}/self-employments/{selfEmploymentId}/periods/{periodId}
                    description: Location of the resource created
              400:
                body:
                  application/json:
                    type: !include schemas/Error.json
                    example: !include examples/errors/INVALID_REQUEST.json
          get:
            displayName: List all self-employment periods
            description: List all self-employment periods
            is: [headers.acceptHeader]
            (annotations.scope): "read:self-assessment"
            securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
            responses:
              200:
                body:
                  application/json:
                    type: !include schemas/SE_Periods.json
                    example: !include examples/self-employment/Periods.json
          /{periodId}:
            uriParameters:
              periodId:
                description: An identifier for the period
                type: string
            get:
              displayName: Get self-employment period
              description: Get a single self-employment period for a given identifier
              is: [headers.acceptHeader]
              (annotations.scope): "read:self-assessment"
              securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
              responses:
                200:
                  body:
                    application/json:
                      type: !include schemas/SE_Period.json
                      example: !include examples/self-employment/Period.json
                404:
                  body:
                    application/json:
                      type: !include schemas/Error.json
                      example: !include examples/errors/NOT_FOUND.json
            put:
              displayName: Update self employment period
              description: Update a self employment period
              is: [headers.acceptHeader]
              (annotations.scope): "write:self-assessment"
              securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
              body:
                application/json:
                  type: !include schemas/SE_UpdatePeriod.json
                  example: !include examples/self-employment/UpdatePeriod.json
              responses:
                204:
                400:
                  body:
                    application/json:
                      type: !include schemas/Error.json
                      example: !include examples/errors/INVALID_REQUEST.json
                404:
                  body:
                    application/json:
                      type: !include schemas/Error.json
                      example: !include examples/errors/NOT_FOUND.json
        /{taxYear}:
          uriParameters:
            taxYear:
              description: The tax year the data applies to
              type: string
              example: 2016-17
          put:
            displayName: Update self-employment annual summary
            description: Update self-employment annual summary for the given year
            is: [headers.acceptHeader]
            (annotations.scope): "write:self-assessment"
            securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
            body:
              application/json:
                type: !include schemas/SE_AnnualSummary.json
                example: !include examples/self-employment/AnnualSummary.json
            responses:
              204:
              400:
                body:
                  application/json:
                    type: !include schemas/Error.json
                    example: !include examples/errors/AnnualSummary_INVALID_REQUEST.json
          get:
            displayName: Get self employment annual summary
            description: Get a self employment annual summary
            is: [headers.acceptHeader]
            (annotations.scope): "read:self-assessment"
            securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
            responses:
              200:
                body:
                  application/json:
                    type: !include schemas/SE_AnnualSummary.json
                    example: !include examples/self-employment/AnnualSummary.json
    /uk-properties:
      (annotations.group):
        name: Self Employment Businesses
        description: !include docs/self-employment.md
      post:
        displayName: Register a UK Property business
        description: Register a UK Property business
        is: [headers.acceptHeader]
        (annotations.scope): "write:self-assessment"
        securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
        body:
          application/json:
            type: !include schemas/UkProperties.json
            example: !include examples/uk-properties/UkProperties.json
        responses:
          201:
            headers:
              Location:
                example: /self-assessment/ni/{nino}/uk-properties
          400:
            body:
              application/json:
                type: !include schemas/Error.json
                example: !include examples/errors/INVALID_ACCOUNTING_PERIOD.json
          409:
            headers:
              Location:
                example: /self-assessment/ni/{nino}/uk-properties
            body:
              application/json:
                type: !include schemas/Error.json
                example: !include examples/errors/CONFLICT.json
      get:
        displayName: Get UK Property business
        description: Get a UK Property business
        is: [headers.acceptHeader]
        (annotations.scope): "read:self-assessment"
        securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
        responses:
          200:
            body:
              application/json:
                type: !include schemas/UkProperties.json
                example: !include examples/uk-properties/UkProperties.json
      /other:
        /periods:
          post:
            displayName: Create a UK Property period
            description: Create a UK Property period for submission of periodic data i.e incomes and expenses
            is: [headers.acceptHeader]
            (annotations.scope): "write:self-assessment"
            securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
            body:
              application/json:
                type: !include schemas/UK_PROP_Period.json
                example: !include examples/uk-properties/Period.json
            responses:
              201:
                headers:
                  Location:
                    example: /self-assessment/ni/{nino}/uk-properties/{propertyType}/periods/{periodId}
              400:
                body:
                  application/json:
                    type: !include schemas/Error.json
                    example: !include examples/uk-properties/errors/Period_INVALID_REQUEST.json
              403:
                body:
                  application/json:
                    type: !include schemas/Error.json
                    example: !include examples/errors/OVERLAPPING_PERIOD.json
              409:
                body:
                  application/json:
                    type: !include schemas/Error.json
                    example: !include examples/errors/CONFLICT.json
          get:
            displayName: List all UK Property periods
            description: List all UK Property periods
            is: [headers.acceptHeader]
            (annotations.scope): "read:self-assessment"
            securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
            responses:
              200:
                body:
                  application/json:
                    type: !include schemas/UK_PROP_Periods.json
                    example: !include examples/uk-properties/Periods.json
          /{periodId}:
            uriParameters:
              periodId:
                displayName: Period ID
                type: string
            get:
              description: Get period
              is: [headers.acceptHeader]
              (annotations.scope): "read:self-assessment"
              securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
              responses:
                200:
                  body:
                    application/json:
                      type: !include schemas/UK_PROP_Period.json
                      example: !include examples/uk-properties/Period.json
            put:
              description: Amend period
              is: [headers.acceptHeader]
              (annotations.scope): "write:self-assessment"
              securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
              body:
                application/json:
                  type: !include schemas/UK_PROP_Period.json
                  example: !include examples/uk-properties/Period.json
              responses:
                204:
                400:
                  body:
                    application/json:
                      type: !include schemas/Error.json
                      example: !include examples/uk-properties/errors/Period_INVALID_REQUEST.json
        /{taxYear}:
            displayName: Annual Summary
            uriParameters:
              taxYear:
                type: string
                example: 2016-17
                displayName: Tax Year
            put:
              description: Update annual summary
              is: [headers.acceptHeader]
              (annotations.scope): "write:self-assessment"
              securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
              body:
                application/json:
                  type: !include schemas/UK_PROP_OTHER_AnnualSummary.json
                  example: !include examples/uk-properties/other/AnnualSummary.json
              responses:
                204:
                400:
                  body:
                    application/json:
                      type: !include schemas/Error.json
                      example: !include examples/uk-properties/errors/AnnualSummary_INVALID_REQUEST.json
            get:
              description: Get annual summary
              is: [headers.acceptHeader]
              (annotations.scope): "read:self-assessment"
              securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
              responses:
                200:
                  body:
                    application/json:
                      type: !include schemas/UK_PROP_OTHER_AnnualSummary.json
                      example: !include ./examples/uk-properties/other/AnnualSummary.json

      /furnished-holiday-letting:
        /periods:
          displayName: Periods
          post:
            description: Create period
            is: [headers.acceptHeader]
            (annotations.scope): "write:self-assessment"
            securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
            body:
              application/json:
                type: !include schemas/UK_PROP_Periods.json
                example: !include examples/uk-properties/Periods.json
            responses:
              201:
                headers:
                  Location:
                    example: /self-assessment/ni/{nino}/uk-properties/{propertyType}/periods/{periodId}
              400:
                body:
                  application/json:
                    type: !include schemas/Error.json
                    example: !include examples/uk-properties/errors/Period_INVALID_REQUEST.json
              403:
                body:
                  application/json:
                    type: !include schemas/Error.json
                    example: !include examples/errors/OVERLAPPING_PERIOD.json
              409:
                body:
                  application/json:
                    type: !include schemas/Error.json
                    example: !include examples/errors/CONFLICT.json
          get:
            description: List periods
            is: [headers.acceptHeader]
            (annotations.scope): "read:self-assessment"
            securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
            responses:
              200:
                body:
                  application/json:
                    type: !include schemas/UK_PROP_Periods.json
                    example: !include examples/uk-properties/Periods.json
          /{periodId}:
            uriParameters:
              periodId:
                displayName: Period ID
                type: string
            get:
              description: Get period
              is: [headers.acceptHeader]
              (annotations.scope): "read:self-assessment"
              securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
              responses:
                200:
                  body:
                    application/json:
                      type: !include schemas/UK_PROP_Period.json
                      example: !include examples/uk-properties/Period.json
            put:
              description: Amend period
              is: [headers.acceptHeader]
              (annotations.scope): "write:self-assessment"
              securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
              body:
                application/json:
                  type: !include schemas/UK_PROP_UpdatePeriod.json
                  example: !include examples/uk-properties/UpdatePeriod.json
              responses:
                204:
                400:
                  body:
                    application/json:
                      type: !include schemas/Error.json
                      example: !include examples/uk-properties/errors/Period_INVALID_REQUEST.json
        /{taxYear}:
            displayName: Annual Summary
            uriParameters:
              taxYear:
                type: string
                example: 2016-17
                displayName: Tax Year
            put:
              description: Update annual summary
              is: [headers.acceptHeader]
              (annotations.scope): "write:self-assessment"
              securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
              body:
                application/json:
                  type: !include schemas/UK_PROP_FHL_AnnualSummary.json
                  example: !include ./examples/uk-properties/fhl/AnnualSummary.json
              responses:
                204:
                400:
                  body:
                    application/json:
                      type: !include schemas/Error.json
                      example: !include examples/uk-properties/errors/AnnualSummary_INVALID_REQUEST.json
            get:
              description: Get annual summary
              is: [headers.acceptHeader]
              (annotations.scope): "read:self-assessment"
              securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
              responses:
                200:
                  body:
                    application/json:
                      type: !include schemas/UK_PROP_FHL_AnnualSummary.json
                      example: !include ./examples/uk-properties/fhl/AnnualSummary.json
